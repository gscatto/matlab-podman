#!/usr/bin/env python3
import argparse
import os
import stat
import string


default_build_dir = os.getcwd()
default_prefix = os.environ['HOME'] + '/.local'


parser = argparse.ArgumentParser()
parser.add_argument('matlab_release', help='MATLAB release name (e.g., "R2025b")')
parser.add_argument('additional_products', help='comma-separated list of MATLAB toolboxes (e.g., "Datafeed Toolbox, Database Toolbox")')
parser.add_argument('-B', '--build-dir', metavar='DIR', dest='build_dir', help=f'path to build directory (defaults to the current directory)', default=default_build_dir)
parser.add_argument('--prefix', help=f'path to installation directory (defaults to {default_prefix})', default=default_prefix)
parser.add_argument('-t', '--tag', metavar='TAG', dest='tag', help='tag of this configuration (defaults to matlab_release)', default=None)
parser.add_argument('--app-name', metavar='NAME', dest='desktop_entry_name', help=f'desktop entry name (defaults to "MATLAB matlab_release", e.g., "MATLAB R2025b")', default=None)
args = parser.parse_args()


args.prefix = os.path.abspath(args.prefix)
if args.tag is None:
	args.tag = args.matlab_release
if args.desktop_entry_name is None:
	args.desktop_entry_name = f"MATLAB {args.matlab_release}"


mapping = {}
mapping['matlab_release'] = args.matlab_release
additional_products = []
for additional_product in args.additional_products.split(','):
	additional_products.append(additional_product.strip().replace(' ', '_'))
mapping['additional_products'] = ' '.join(additional_products)
mapping['prefix'] = args.prefix
mapping['home'] = os.environ['HOME']
mapping['tag'] = args.tag
mapping['desktop_entry_name'] = args.desktop_entry_name



templates = ['Makefile.in', 'podman-build.conf.in', 'matlab.in', 'matlab.desktop.in']
for template in templates:
	with open(template, 'r') as input_file, open(args.build_dir + '/' + template[:-3], 'w') as output_file:
		output_file.write(string.Template(input_file.read()).substitute(mapping))


executables = ['matlab.in']
for executable in executables:
	os.chmod(args.build_dir + '/' + executable[:-3], stat.S_IRUSR | stat.S_IWUSR | stat.S_IXUSR | stat.S_IRGRP | stat.S_IXGRP | stat.S_IROTH | stat.S_IXOTH)
